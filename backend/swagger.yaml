openapi: 3.0.0
info:
  title: Event Ticketing API
  version: 1.0.0
  description: API documentation for authentication, events, and ticketing
servers:
  - url: http://localhost:5000/api

paths:
  /auth/signup:
    post:
      summary: Sign up a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        201:
          description: User created
        400:
          description: Invalid input

  /auth/login:
    post:
      summary: Log in a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in
        401:
          description: Unauthorized

  /auth/verify:
    get:
      summary: Verify user token
      tags: [Auth]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Token valid
        401:
          description: Unauthorized

  /events:
    get:
      summary: Get all events
      tags: [Events]
      responses:
        200:
          description: List of events

    post:
      summary: Create a new event
      tags: [Events]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                date:
                  type: string
                category:
                  type: string
                location:
                  type: string
                description:
                  type: string
      responses:
        201:
          description: Event created
        401:
          description: Unauthorized

  /events/{id}:
    get:
      summary: Get event by ID
      tags: [Events]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Event ID
      responses:
        200:
          description: Event details
        404:
          description: Event not found

  /events/categories:
    get:
      summary: Get all event categories
      tags: [Events]
      responses:
        200:
          description: List of categories

  /tickets/purchase:
    post:
      summary: Purchase a ticket
      tags: [Tickets]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
      responses:
        201:
          description: Ticket purchased
        400:
          description: Bad request
        401:
          description: Unauthorized

  /tickets/my-tickets:
    get:
      summary: Get user's tickets
      tags: [Tickets]
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of user's tickets
        401:
          description: Unauthorized

  /tickets/{ticketId}:
    get:
      summary: Get ticket details
      tags: [Tickets]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: ticketId
          schema:
            type: string
          required: true
          description: Ticket ID
      responses:
        200:
          description: Ticket details
        404:
          description: Ticket not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
